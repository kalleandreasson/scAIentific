@using Frontend
@using System.Net.Http
@using System.Net.Http.Json
@using Newtonsoft.Json
@inject HttpClient httpClient


<div>
 <p role="status">@textToOutput</p>
<textarea type="text" @bind="prompt" @oninput="OnInputEvent"></textarea>
</div>

<div>
    <button @onclick="OutputText">Find Research Front</button>
</div>


@code {
    private string? textToOutput;

    private string prompt = "";
    private void OnInputEvent(ChangeEventArgs changeEvent)
    {

        prompt = changeEvent.Value?.ToString() ?? "";


    }



    /// <summary>
    /// Makes request to generate the Research Front.
    /// </summary>
    /// <returns></returns>
    private async Task OutputText()
{
    try
    {
        Console.WriteLine("OutputText method called");

        var response = await httpClient.PostAsJsonAsync("http://localhost:5066/research-front/generate", new
        {
            systemMessage = "you will be provided with a number of abstracts, each abstract is delimited by one quotes. Your task is to review these abstracts carefully to identify the current research front in the specified field. Look for trends, key themes, and groundbreaking findings that signify major advancements or shifts in research focus. Provide a summary that highlights these elements, ensuring to note how the citation technique has been applied in each case",
            userMessage = $"{prompt} "
            // other code
        });

        if (response.IsSuccessStatusCode)
        {
            Console.WriteLine("an answer come");
            textToOutput = await response.Content.ReadAsStringAsync();
            prompt = ""; // Clear the prompt variable
        }
        else
        {
            var errorContent = await response.Content.ReadAsStringAsync();
            textToOutput = $"Error occurred: {errorContent}";
        }
    }
    catch (HttpRequestException ex)
    {
        textToOutput = $"Network error: {ex.Message}. Please try again later.";
    }
    catch (Exception ex) // General exception catch block for unexpected errors
    {
        textToOutput = $"An unexpected error occurred: {ex.Message}. Please contact support.";
    }
}

}
