@page "/assistant"
@using Frontend.Shared
@using Frontend.Models
@using Frontend.Services
@inject ChatService ChatService
@using System.Globalization

<PageTitle>Assistant</PageTitle>
<div class="index-container">
    <h1>Research Assistant</h1>
    <div class="chat-history">
        @foreach (var message in chatHistory)

        {

            var messageTime = DateTimeOffset.FromUnixTimeSeconds(message.CreatedAt).ToLocalTime().ToString("g",
            CultureInfo.CurrentCulture);

            var messageType = message.Role == 3 ? "User" : "Assistant";

            if (message.Content != null && message.Content.Any())

            {

                var firstContent = message.Content.First();

                if (firstContent.Text != null)

                {
                    <div class="@($"message {messageType.ToLower()}")">
                        <div class="message-info">
                            <span class="message-type">@messageType</span>
                            <span class="message-time">@messageTime</span>
                        </div>
                        <p>@firstContent.Text.Value</p>
                    </div>
                }

            }

        }
    </div>

    <EditForm Model="@chat" OnValidSubmit="HandleSubmitAsync">
        <InputText @bind-Value="@userQuery" />
        <button type="submit">Send</button>
    </EditForm>

</div>

@code {
    private string userQuery = "";
    private List<ChatMessage> chatHistory = new List<ChatMessage>();
    private object chat = new { };
    private async Task HandleSubmitAsync()
    {
        var chatRequest = new ChatRequest { UserMessage = userQuery };
        var chatResponse = await ChatService.PostUserQueryAsync(chatRequest);

        if (chatResponse?.Messages != null)
        {
            chatHistory = chatResponse.Messages.OrderBy(m => m.CreatedAt).ToList();
        }
        else
        {
            chatHistory = new List<ChatMessage>();
        }
        userQuery = "";
    }
}
