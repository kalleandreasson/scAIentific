@page "/"
@using Frontend.Shared
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IConfiguration configuration


<PageTitle>Home</PageTitle>

<div class="index-container index">
    <section class="welcome-banner">
        <div class="banner-content">
            <h1>Welcome to scAIentific - Your AI-powered Research Assistant</h1>
        </div>
    </section>

    <button class="index-button" @onclick="CheckAssistantStatus">Start</button>
</div>

@code {
    private async Task CheckAssistantStatus()
    {
        try
        {
            // Use GetAsync to obtain the HttpResponseMessage
            var response = await Http.GetAsync($"{configuration.GetValue<string>("APIBaseUrl")}research-front/get-assistant");
            
            if (response.IsSuccessStatusCode)
            {
                var responseBody = await response.Content.ReadAsStringAsync();
                // Navigate based on the assistant check response
                if (responseBody != null && responseBody.StartsWith("asst_"))
                {
                    // Navigate to the Assistant component/page
                    NavigationManager.NavigateTo("/assistant");
                }
                else
                {
                    // Navigate to the UploadFile page/component if the assistant is not found
                    NavigationManager.NavigateTo("/create-assistant");
                }
            }
            else if (response.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                // Handle 404 specifically if the assistant is not found
                Console.WriteLine("Assistant not found");
                NavigationManager.NavigateTo("/createassistant");
            }
            else
            {
                // Handle other types of errors
                Console.WriteLine($"Server returned error: {response.StatusCode}");
                // NavigationManager.NavigateTo("/error"); // Uncomment or adjust based on your application's routing
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching assistant status: {ex.Message}");
            // In case of error, navigate to a default or error page
            // NavigationManager.NavigateTo("/error"); // Uncomment or adjust based on your application's routing
        }
    }
}
