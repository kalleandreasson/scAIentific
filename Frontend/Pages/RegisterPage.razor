@page "/register"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IConfiguration Configuration

<PageTitle>Register</PageTitle>

<EditForm Model="newUser" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Username:</label>
        <InputText @bind-Value="newUser.Username" />
    </div>
    <div>
        <label>Password:</label>
        <InputText @bind-Value="newUser.Password" type="password" />
    </div>
    <div>
        <label>First Name:</label>
        <InputText @bind-Value="newUser.FirstName" />
    </div>
    <div>
        <label>Last Name:</label>
        <InputText @bind-Value="newUser.LastName" />
    </div>
    <div>
        <label>Email:</label>
        <InputText @bind-Value="newUser.Email" type="email" />
    </div>
    <button type="submit">Register</button>
</EditForm>

@code {

    private HttpClient mockHttpClient;

    protected override void OnInitialized()
    {
        var handler = new MockHttpMessageHandler();
        mockHttpClient = new HttpClient(handler) {
            BaseAddress = new Uri(Configuration["APIBaseUrl"]) // Properly set this in appsettings.json
        };
    }

    private UserRegistrationModel newUser = new UserRegistrationModel();

    private async Task HandleRegister()
    {
        string registerEndpoint = "register";  // Assuming the base URL is set in the mockHttpClient

        var response = await mockHttpClient.PostAsJsonAsync(registerEndpoint, newUser);
        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            Console.WriteLine("Registration failed");
        }
    }

    @* private async Task HandleRegister()
    {
         string apiBaseUrl = Configuration["APIBaseUrl"];
         string registerEndpoint = $"{apiBaseUrl}register";

        var response = await Http.PostAsJsonAsync("registerEndpoint", newUser);
        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            Console.WriteLine("Registration failed");
        }
    } *@
}
